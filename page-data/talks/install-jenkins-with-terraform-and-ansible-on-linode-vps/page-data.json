{"componentChunkName":"component---src-pages-talks-markdown-remark-frontmatter-slug-tsx","path":"/talks/install-jenkins-with-terraform-and-ansible-on-linode-vps/","result":{"data":{"markdownRemark":{"html":"<p>In this guide Jenkins will be installed on a Linode VPS using Terraform and Ansible.</p>\n<p>Terraform will be used to provision the Linode VPS and Ansible will be used to install Jenkins and configure a firewall. This guide won't explain how to configure Jenkins once it is installed.</p>\n<ul>\n<li><a href=\"#setup\">Setup</a></li>\n<li><a href=\"#ignore-files-from-git\">Ignore files from Git</a></li>\n<li><a href=\"#create-a-vault-password\">Create a vault password</a></li>\n<li><a href=\"#create-a-linode-vps-with-terraform\">Create a Linode VPS with Terraform</a>\n<ul>\n<li><a href=\"#create-terraform-inputs\">Create Terraform inputs</a></li>\n<li><a href=\"#create-terraform-outputs\">Create Terraform outputs</a></li>\n<li><a href=\"#create-a-template-for-the-ansible-hosts\">Create a template for the Ansible hosts</a></li>\n<li><a href=\"#create-terraform-main\">Create Terraform main</a></li>\n<li><a href=\"#create-the-inputs-for-the-site-module\">Create the inputs for the site module</a></li>\n<li><a href=\"#create-the-local-variables-for-the-site-module\">Create the local variables for the site module</a></li>\n<li><a href=\"#create-the-main-file-for-the-site-module\">Create the main file for the site module</a></li>\n<li><a href=\"#create-the-output-file-for-the-site-module\">Create the output file for the site module</a></li>\n<li><a href=\"#provision-the-linode-vps\">Provision the Linode VPS</a></li>\n</ul>\n</li>\n<li><a href=\"#install-software-with-ansible\">Install software with Ansible</a>\n<ul>\n<li><a href=\"#create-an-update-ansible-role\">Create an update Ansible role</a></li>\n<li><a href=\"#create-a-firewall-ansible-role\">Create a firewall Ansible role</a></li>\n<li><a href=\"#run-the-ansible-playbook\">Run the Ansible playbook</a></li>\n</ul>\n</li>\n</ul>\n<h2>Setup</h2>\n<p>This guide assumes the following things:</p>\n<ul>\n<li>Ansible is installed locally</li>\n<li>Jenkins is installed locally</li>\n<li>You have a Linode account</li>\n<li>You have a Linode access token</li>\n<li>You have a SSH key</li>\n</ul>\n<p>The first thing to do is to create the following folder structure.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ansible/\n└───roles/\n    └───jenkins/\n        └───tasks/\n    └───firewall/\n        └───tasks/\n    └───upgrade/\n        └───tasks/\nterraform/\n└───modules/\n    └───site/\n└───templates/</code></pre></div>\n<h2>Ignore files from Git</h2>\n<p>Create a <code class=\"language-text\">.gitignore</code> file in the root directory with the following</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># IDE</span>\n.idea\n\n<span class=\"token comment\"># Ansible</span>\nansible/hosts\nansible/.vault_pass.txt\n\n<span class=\"token comment\"># Terraform</span>\nterraform/.terraform.lock.hcl\nterraform/.terraform\nterraform/terraform.tfvars\nterraform/terraform.tfstate\nterraform/.terraform.tfstate.lock.info\nterraform/terraform.tfstate.backup</code></pre></div>\n<h2>Create a vault password</h2>\n<p>Create the file <code class=\"language-text\">ansible/.vault_pass.txt</code> with a random vault password.  This will be used later in the Ansible steps.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">SomeRandomString</code></pre></div>\n<h2>Create a Linode VPS with Terraform</h2>\n<p>Create the file <code class=\"language-text\">terraform/terraform.tfvars</code> and add the following variables</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">token</span><span class=\"token operator\">=</span><span class=\"token string\">\"&lt;YOUR_LINODE_TOKEN>\"</span>\n<span class=\"token assign-left variable\">root_pass</span><span class=\"token operator\">=</span><span class=\"token string\">\"&lt;YOUR_LINODE_ROOT_PASSWORD\"</span>\n<span class=\"token assign-left variable\">ssh_key_pub</span><span class=\"token operator\">=</span><span class=\"token string\">\"&lt;PATH_TO_YOUR_SSH_KEY>\"</span></code></pre></div>\n<h3>Create Terraform inputs</h3>\n<p>Create the file <code class=\"language-text\">terraform/inputs.tf</code> and add the following inputs</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">variable <span class=\"token string\">\"token\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">=</span> string\n  description <span class=\"token operator\">=</span> <span class=\"token string\">\"Environment in which to deploy application\"</span>\n  sensitive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\nvariable <span class=\"token string\">\"root_pass\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">=</span> string\n  description <span class=\"token operator\">=</span> <span class=\"token string\">\"Site Root Password\"</span>\n  sensitive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n\nvariable <span class=\"token string\">\"ssh_key_pub\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">=</span> string\n  description <span class=\"token operator\">=</span> <span class=\"token string\">\"SSH KEY\"</span>\n  sensitive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Create Terraform outputs</h3>\n<p>Create the file <code class=\"language-text\">terraform/outputs.tf</code> with the following output variables</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">output <span class=\"token string\">\"webserver_id\"</span> <span class=\"token punctuation\">{</span>\n  value <span class=\"token operator\">=</span> module.site.jenkins-site-id\n<span class=\"token punctuation\">}</span>\noutput <span class=\"token string\">\"webserver_ip\"</span> <span class=\"token punctuation\">{</span>\n  value <span class=\"token operator\">=</span> module.site.jenkins-site-public-ip\n<span class=\"token punctuation\">}</span>\noutput <span class=\"token string\">\"webserver_private_ip\"</span> <span class=\"token punctuation\">{</span>\n  value <span class=\"token operator\">=</span> module.site.jenkins-site-private-ip\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Create a template for the Ansible hosts</h3>\n<p>Create a file in <code class=\"language-text\">terraform/templats/hosts.tpl</code> with the following template</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">all:\n  children:\n    webservers:\n      hosts:\n        webserver_1:\n          ansible_host: ${webserver_ip}\n          private_ip: ${webserver_private_ip}</code></pre></div>\n<h3>Create Terraform main</h3>\n<p>Create the file <code class=\"language-text\">terraform/main.tf</code> and add the following Terraform code</p>\n<p>This will do the following:</p>\n<ul>\n<li>Install the Linode provider using version <code class=\"language-text\">1.18.0</code></li>\n<li>Pass the Linode token to the Linode provider</li>\n<li>Require the <code class=\"language-text\">site</code> module and provide it the <code class=\"language-text\">root_pass</code> and <code class=\"language-text\">ssh_key_pub</code> variables</li>\n<li>Create a file in the <code class=\"language-text\">ansible</code> directory with jenkins private and public IPs</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">terraform <span class=\"token punctuation\">{</span>\n  required_providers <span class=\"token punctuation\">{</span>\n    linode <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"linode/linode\"</span>\n      version <span class=\"token operator\">=</span> <span class=\"token string\">\"1.18.0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nprovider <span class=\"token string\">\"linode\"</span> <span class=\"token punctuation\">{</span>\n  token <span class=\"token operator\">=</span> var.token\n<span class=\"token punctuation\">}</span>\n\nmodule <span class=\"token string\">\"site\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"./modules/site\"</span>\n  root_pass <span class=\"token operator\">=</span> var.root_pass\n  ssh_key_pub <span class=\"token operator\">=</span> var.ssh_key_pub\n  label <span class=\"token operator\">=</span> <span class=\"token string\">\"jenkins\"</span>\n<span class=\"token punctuation\">}</span>\n\nresource <span class=\"token string\">\"local_file\"</span> <span class=\"token string\">\"hosts\"</span> <span class=\"token punctuation\">{</span>\n  depends_on <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    module.site\n  <span class=\"token punctuation\">]</span>\n  content <span class=\"token operator\">=</span> templatefile<span class=\"token punctuation\">(</span><span class=\"token string\">\"./templates/hosts.tpl\"</span>,\n    <span class=\"token punctuation\">{</span>\n      webserver_ip <span class=\"token operator\">=</span> module.site.jenkins-site-public-ip\n      webserver_private_ip <span class=\"token operator\">=</span> module.site.jenkins-site-private-ip\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n  filename <span class=\"token operator\">=</span> <span class=\"token string\">\"../ansible/hosts\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Create the inputs for the site module</h3>\n<p>Create the file <code class=\"language-text\">terraform/modules/site/inputs.tf</code> and add the following terraform code</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">variable <span class=\"token string\">\"root_pass\"</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\nvariable <span class=\"token string\">\"ssh_key_pub\"</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\nvariable <span class=\"token string\">\"label\"</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Create the local variables for the site module</h3>\n<p>Create the file <code class=\"language-text\">terraform/modules/site/locals.tf</code> and add the following terraform code</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">locals <span class=\"token punctuation\">{</span>\n  region <span class=\"token operator\">=</span> <span class=\"token string\">\"eu-west\"</span>\n  site_label <span class=\"token operator\">=</span> <span class=\"token string\">\"jenkinsSite\"</span>\n  site_type <span class=\"token operator\">=</span> <span class=\"token string\">\"g6-nanode-1\"</span>\n  image <span class=\"token operator\">=</span> <span class=\"token string\">\"linode/ubuntu18.04\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Create the main file for the site module</h3>\n<p>Create the file <code class=\"language-text\">terraform/modules/site/main.tf</code> with the following terraform code.</p>\n<p>This will do the following:</p>\n<ul>\n<li>Use the linode provider</li>\n<li>Create a <code class=\"language-text\">linode_sshkey</code> resource</li>\n<li>Create a <code class=\"language-text\">lindoe_instance</code> resource</li>\n<li>Upgrade the VPS and install Python</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">terraform <span class=\"token punctuation\">{</span>\n  required_providers <span class=\"token punctuation\">{</span>\n    linode <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"linode/linode\"</span>\n      version <span class=\"token operator\">=</span> <span class=\"token string\">\"1.18.0\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nresource <span class=\"token string\">\"linode_sshkey\"</span> <span class=\"token string\">\"jenkins\"</span> <span class=\"token punctuation\">{</span>\n  label <span class=\"token operator\">=</span> var.label\n  ssh_key <span class=\"token operator\">=</span> chomp<span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">(</span>var.ssh_key_pub<span class=\"token punctuation\">))</span>\n<span class=\"token punctuation\">}</span>\n\nresource <span class=\"token string\">\"linode_instance\"</span> <span class=\"token string\">\"jenkins\"</span> <span class=\"token punctuation\">{</span>\n  label <span class=\"token operator\">=</span> var.label\n  group <span class=\"token operator\">=</span> local.site_label\n  image <span class=\"token operator\">=</span> local.image\n  region <span class=\"token operator\">=</span> local.region\n  <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">=</span> local.site_type\n  private_ip <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  root_pass <span class=\"token operator\">=</span> var.root_pass\n  authorized_keys <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    linode_sshkey.jenkins.ssh_key\n  <span class=\"token punctuation\">]</span>\n\n  provisioner <span class=\"token string\">\"remote-exec\"</span> <span class=\"token punctuation\">{</span>\n    inline <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"sudo apt-get update &amp;&amp; sudo apt-get upgrade -y\"</span>,\n      <span class=\"token string\">\"sudo apt-get -qq upgrade -y\"</span>,\n      <span class=\"token string\">\"sudo apt-get -qq install python -y\"</span>,\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n</code></pre></div>\n<h3>Create the output file for the site module</h3>\n<p>Create the file <code class=\"language-text\">terraform/modules/site/outputs.tf</code> with the following terraform code.</p>\n<p>This will do the following:</p>\n<ul>\n<li>Output the VPS ID</li>\n<li>Output the public IP address</li>\n<li>Output the Private IP address</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">output <span class=\"token string\">\"jenkins-site-id\"</span> <span class=\"token punctuation\">{</span>\n  value <span class=\"token operator\">=</span> linode_instance.jenkins.id\n<span class=\"token punctuation\">}</span>\noutput <span class=\"token string\">\"jenkins-site-public-ip\"</span> <span class=\"token punctuation\">{</span>\n  value <span class=\"token operator\">=</span> linode_instance.jenkins.ip_address\n<span class=\"token punctuation\">}</span>\noutput <span class=\"token string\">\"jenkins-site-private-ip\"</span> <span class=\"token punctuation\">{</span>\n  value <span class=\"token operator\">=</span> linode_instance.jenkins.private_ip_address\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Provision the Linode VPS</h3>\n<p>In a terminal run the following inside the <code class=\"language-text\">terraform</code> folder</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ terraform init</code></pre></div>\n<p>Then apply the terraform plan</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ terraform apply</code></pre></div>\n<p>Once the VPS is provisioned the output variables should be shown in the terminsal like so</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Apply complete<span class=\"token operator\">!</span> Resources: <span class=\"token number\">3</span> added, <span class=\"token number\">0</span> changed, <span class=\"token number\">0</span> destroyed.\n\nOutputs:\n\nwebserver_id <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;VPS_ID>\"</span>\nwebserver_ip <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;VPS_PUBLIC_IP>\"</span>\nwebserver_private_ip <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;VPS_PRIVATE_IP>\"</span></code></pre></div>\n<p>There should also be a <code class=\"language-text\">hosts</code> file in the <code class=\"language-text\">ansible</code> directory with the populated IP addresses.  It should look similar to the following</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">all:\n  children:\n    webservers:\n      hosts:\n        webserver_1:\n          ansible_host: &lt;VPS_PUBLIC_IP>\n          private_ip: &lt;VPS_PRIVATE_IP></code></pre></div>\n<h2>Install software with Ansible</h2>\n<p>Create the file <code class=\"language-text\">ansible/ansible.cfg</code> that will hold the Ansible configuration</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[defaults]\ninventory = hosts\nhost_key_checking = false\nvault_password_file = .vault_pass.txt</code></pre></div>\n<h3>Create an update Ansible role</h3>\n<p>Create the file <code class=\"language-text\">ansible/roles/upgrade/tasks/main.yml</code> with the following yaml code which will update the package cache on the Linode VPS</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Update and upgrade apt packages\n  <span class=\"token key atrule\">become</span><span class=\"token punctuation\">:</span> yes\n  <span class=\"token key atrule\">apt</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">upgrade</span><span class=\"token punctuation\">:</span> yes\n    <span class=\"token key atrule\">update_cache</span><span class=\"token punctuation\">:</span> yes\n    <span class=\"token key atrule\">cache_valid_time</span><span class=\"token punctuation\">:</span> <span class=\"token number\">86400</span></code></pre></div>\n<h3>Create a firewall Ansible role</h3>\n<p>Create the file <code class=\"language-text\">ansible/roles/firewall/tasks/main.yml</code> with the following yaml code which will use <code class=\"language-text\">ufw</code> to lock down the webserver.</p>\n<p>This will do the following:</p>\n<ul>\n<li>Allow SSH on port 22</li>\n<li>Allow HTTP requests on port 80</li>\n<li>Allow HTTPS requests on port 443</li>\n<li>Set the default policy to deny</li>\n<li>Enable firewall logging</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Allow SSH\n  <span class=\"token key atrule\">ufw</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">rule</span><span class=\"token punctuation\">:</span> allow\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"22\"</span>\n    <span class=\"token key atrule\">proto</span><span class=\"token punctuation\">:</span> tcp\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Allow Port 80\n  <span class=\"token key atrule\">ufw</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">rule</span><span class=\"token punctuation\">:</span> allow\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"80\"</span>\n    <span class=\"token key atrule\">proto</span><span class=\"token punctuation\">:</span> tcp\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Allow Port 443\n  <span class=\"token key atrule\">ufw</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">rule</span><span class=\"token punctuation\">:</span> allow\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"443\"</span>\n    <span class=\"token key atrule\">proto</span><span class=\"token punctuation\">:</span> tcp\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Set firewall default policy\n  <span class=\"token key atrule\">ufw</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> enabled\n    <span class=\"token key atrule\">policy</span><span class=\"token punctuation\">:</span> deny\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Set logging\n  <span class=\"token key atrule\">ufw</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">logging</span><span class=\"token punctuation\">:</span> on</code></pre></div>\n<h3>Run the Ansible playbook</h3>\n<p>To run the playbook, move into the <code class=\"language-text\">ansible</code> directory and run the following command.</p>\n<p><strong>Command arguments</strong></p>\n<ul>\n<li><code class=\"language-text\">-i</code> = host inventory file.  This has automatically been created by Terraform</li>\n<li><code class=\"language-text\">-u</code> = The user that will run the commands</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ansible-playbook <span class=\"token parameter variable\">-i</span> ./hosts playbook.yaml <span class=\"token parameter variable\">-u</span> root</code></pre></div>","frontmatter":{"title":"Install Jenkins with terraform and ansible on a Linode VPS","slide_url":null,"video_url":null,"events":null}}},"pageContext":{"id":"bd3d4fca-6ad3-5c8a-9b10-75003c15f907","frontmatter__slug":"/install-jenkins-with-terraform-and-ansible-on-linode-vps","__params":{"frontmatter__slug":"install-jenkins-with-terraform-and-ansible-on-linode-vps"}}},"staticQueryHashes":["3649515864","63159454"],"slicesMap":{}}