{"componentChunkName":"component---src-pages-talks-markdown-remark-frontmatter-slug-tsx","path":"/talks/how-to-create-draft-post-in-gatsbyjs/","result":{"data":{"markdownRemark":{"html":"<p>Today I was at the <a href=\"https://www.phpconference.co.uk\">PHP UK conference</a> and whilst I was listening to the talks I started jotting down notes in Markdown ready for possible future blog posts.\nMost of these Markdown files are littered with spelling mistakes and brain dumps.  None of them are ready for publication.</p>\n<p>The trouble I have is that there isn't anyway (yet) to set a mark a blog post as published or in a draft state.</p>\n<p>There are a few of ways I could define a posts status.</p>\n<ol>\n<li>Create a boolean called <code class=\"language-text\">published</code> and set it to <code class=\"language-text\">true</code> or <code class=\"language-text\">false</code></li>\n<li>Filter the posts by date and only allow posts to be <strong>published</strong> if they have a date in the past</li>\n<li>Create a variable called <code class=\"language-text\">status</code> with the value of <code class=\"language-text\">draft</code> or <code class=\"language-text\">published</code></li>\n</ol>\n<p>The third option is the most flexible as it allows for multiple statues to be defined.</p>\n<p>To do this first add the status variable to each of the posts frontmatter like so</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n<span class=\"token front-matter yaml language-yaml\">type: \"blog\"\nslug: \"/how-to-create-draft-post-in-gatsbyjs\"\ndate: \"2022-02-18\"\ntitle: \"How to create draft blog posts in Gatsbyjs\"\nexcerpt: \"Something Something\"\nstatus: draft</span>\n<span class=\"token punctuation\">---</span></span></code></pre></div>\n<p>The GraphQL filter also needs to be adjusted to filter posts that have a status of published.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query {\n    allMarkdownRemark(filter: {frontmatter: {type: {eq: \"blog\"},  status: {eq: \"published\"}}}, sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            slug\n            title\n            status\n          }\n        }\n      }\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<p>Now re-run the GatsbyJS develop command to test the changes</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run develop</code></pre></div>\n<p>You should only be seeing posts that have a status of published</p>\n<p>Now I can get back to crafting the draft blog posts without worry that a post might accidentally be published.</p>","frontmatter":{"title":"How to create draft blog posts in Gatsbyjs","slide_url":null,"video_url":null,"events":null}}},"pageContext":{"id":"2af381e2-5a25-5d02-bf3b-620681a0a6ba","frontmatter__slug":"/how-to-create-draft-post-in-gatsbyjs","__params":{"frontmatter__slug":"how-to-create-draft-post-in-gatsbyjs"}}},"staticQueryHashes":["3649515864","63159454"],"slicesMap":{}}